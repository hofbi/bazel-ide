module(name = "bazel_ide")

# keep-sorted start
bazel_dep(name = "aspect_bazel_lib", version = "2.16.0")
bazel_dep(name = "aspect_rules_py", version = "1.4.0")
bazel_dep(name = "bazel_env.bzl", version = "0.3.2")
bazel_dep(name = "buildifier_prebuilt", version = "8.0.3")
bazel_dep(name = "buildozer", version = "8.2.0.bcr.1")
bazel_dep(name = "rules_cc", version = "0.1.1")
bazel_dep(name = "rules_coreutils", version = "1.0.1")
bazel_dep(name = "rules_multitool", version = "1.3.0")
bazel_dep(name = "rules_python", version = "1.4.1")
bazel_dep(name = "rules_rust", version = "0.61.0")
bazel_dep(name = "rules_sh", version = "0.5.0")
bazel_dep(name = "rules_uv", version = "0.71.0")
# keep-sorted end

PYTHON_VERSION = "3.12"

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    is_default = True,
    python_version = PYTHON_VERSION,
)
use_repo(python, "python_3_12", "python_versions")

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    hub_name = "python_deps",
    python_version = PYTHON_VERSION,
    requirements_lock = "//:requirements_lock.txt",
)
use_repo(pip, "python_deps")

rust = use_extension("@rules_rust//rust:extensions.bzl", "rust")
rust.toolchain(
    edition = "2021",
    rustfmt_version = "1.87.0",
    versions = ["1.87.0"],
)
use_repo(rust, "rust_toolchains")

register_toolchains("@rust_toolchains//:all")

multitool = use_extension("@rules_multitool//multitool:extension.bzl", "multitool")
multitool.hub(lockfile = "//:multitool.lock.json")
use_repo(multitool, "multitool")
